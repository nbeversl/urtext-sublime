%YAML 1.2
---
name: Urtext
file_extensions: 
  - txt
  - urtext
scope: urtext

contexts:
  main: 
    - include: syntax-main
    - include: bold-text
    - match: '(?<!\\){'
      scope: punctuation.section.braces.begin.inline_node_1.urtext
      push: inline-node-1
    - match: '(?<!\\)}'
      scope: invalid.illegal.stray-bracket-end
  
  syntax-main:    
    - include: node_pointer
    - include: node_link
    - include: other-project-link
    - include: file_link
    - include: shorthand_meta
    - include: url
    - include: node_title
    - include: trigger
    
    - match: '[\w_\?\!#\d]+?(?=::)(::)(\{)'
      captures:
        1: meta_key.urtext
        2: tagvalue-separator.urtext  
        3: punctuation.section.braces.begin.inline_node_1.urtext
      push: inline-node-1

    - match: (\+)?(\*{1,2})?([\w_\?\!#\d-]+?)(?=::)
      captures:
        1: tag_self.urtext
        2: tag_descendants.urtext
        3: meta_key.urtext
      push: metadata-entry

    - match: ^\s*(â€¢|-)
      scope: compact_node_opener.urtext 
      push: compact-node

    - match: \[\[
      scope: punctuation.section.braces.begin.dynamic_definition.urtext
      push: dynamic-definition
    
    - match: '`'
      push: raw 

    - match: '(?<=::)<'
      push: metadata-timestamp
    
   

    - match: <[^!\s-]
      push: datestamp

    - match: <!{1}
      push: system-message
      
    # Embedded Syntaxes
    - match: '%%Python'
      scope: embed_marker.urtext
      embed: Packages/Python/Python.sublime-syntax
      embed_scope: python.urtext
      escape: '%%'
      escape_captures: 
         0: escape_marker.urtext
    
    - match: '%%HTML'
      scope: embed_marker.urtext
      embed: Packages/HTML/HTML.sublime-syntax
      embed_scope: html.urtext
      escape: '%%'
      escape_captures: 
        0: escape_marker.urtext
    
    - match: '%%JSON'
      scope: embed_marker.urtext
      embed: Packages/JSON/JSON.sublime-syntax
      embed_scope: json.urtext
      escape: '%%'
      escape_captures: 
        0: escape_marker.urtext

    - match: '%%JavaScript'
      scope: embed_marker.urtext
      embed: Packages/JavaScript/JavaScript.sublime-syntax
      embed_scope: text.urtext
      escape: '%%'
      escape_captures: 
        0: escape_marker.urtext

    - match: '%%PHP'
      scope: embed_marker.urtext
      embed: Packages/PHP/PHP Source.sublime-syntax
      embed_scope: php.urtext
      escape: '%%'
      escape_captures:
        0: escape_marker.urtext

    - match: '%%Markdown'
      scope: embed_marker.urtext
      embed: Packages/Markdown/Markdown.sublime-syntax
      embed_scope: markdown.urtext
      escape: '%%'
      escape_captures:
        0: escape_marker.urtext

    # Any other
    - match: '%%\w*?'
      embed: Packages/Text/text.sublime-syntax
      scope: embed_marker.urtext
      embed_scope: text.urtext
      escape: '%%'
      escape_captures:
        0: escape_marker.urtext

  trigger:
    - match: '(>>>[A-Z_]+)(?=\()'
      scope: trigger_name.urtext
      push: trigger-with-args

  trigger-with-args:
    - match: \(
      scope: dynamic-definition-parens
      push: function
    - match: (?<=\))
      pop: true

  # Metadata  
  metadata-value:
    - meta_scope: meta_value.urtext
    - match: <
      push: datestamp
    - include: meta-key-terminator
    - include: tagvalue-separator
    - include: node_link
    - include: file_link  
    - match: ;|\r|(?=\})|$
      pop: 2

  metadata-entry:
    - meta_scope: metadata_entry.urtext
    - match: '(?<=::)[^\s]'
      push: metadata-value
    - match: ;|\r|(?=\})|$
      pop: 1

  shorthand_meta:
    - match: '(?:^|\s)#[A-Z,a-z].*?\b'
      scope: hash_meta.urtext

  datestamp:
    - meta_scope: entity.name.struct.datestamp.urtext
    - match: '>'
      pop: true

  system-message:
    - meta_scope: entity.name.struct.system-message.urtext
    - match: '!>'
      pop: true

  metadata-timestamp:
    - meta_scope: entity.name.struct.datestamp.urtext
    - match: '>'
      set: metadata-value

  dynamic-definition:
    - meta_scope: dynamic-definition
    - match: '`'
      push: raw
    - include: node_link
    - include: file_link

    - match: '((\+|\-|\>)|([A-Z_]+))(?=\()'
      scope: function-name.urtext
      push: function
    
    - match: \]\]
      scope: punctuation.section.braces.end.dynamic_definition.urtext
      pop: true

  at-marker:
    - match: '@\w+'

  dynamic-key-value:
    - match: '(\w+)\s*(\=|\?|before|after)\s*([^;\(\)]*)(;?)'
      captures:
        1: dynamic_key.urtext
        2: dynamnic_operator.urtext
        3: dynamic_value.urtext
        4: dynamic_arg_separator.urtext

  virtual-target:
    - match: '(@)(\w+)'
      captures: 
        1: virtual_target_indicator.urtext
        2: virtual_target_name.urtext
   
  function:
    - match: (\()
      scope: dynamic-definition-parens
    - include: dynamic-key-value
    - include: virtual-target
    - include: node_link
    - include: file_link
    - include: dynamic-flag
    - include: asterisk
    - include: var-word
    - include: at-marker
    - match: <[^!\s-]
      push: datestamp
    - match: \)
      scope: dynamic-definition-parens
      pop: true
  
  key-value:
    - match: '(\w+)\s?[=|~|?]\s?([^\n;\-)]+)([\n;]?)'
      captures:
        1: dynamic-key.urtext
        2: dynamic-value.urtext  
        3: dynamic-delimiter.urtext  

  dynamic-flag:
    - match: '\-[a-z_]+\b'
      scope: dynamic-flag.urtext

  asterisk:
    - match: '(?<=\(|\s)\*(?=\)|\s)'
      scope: dynamic-flag.urtext

  var-word:
    - meta_scope: format-string.urtext
    - match: \$[A-Za-z0-9_-]+
      scope: dynamic-def-format-var.urtext

  # Node Nesting

  inline-node-1: 
    - meta_scope: inline_node_1
    - include: syntax-main
    - match: '(?<!\\){'
      scope: punctuation.section.braces.begin.inline_node_2.urtext
      push: inline-node-2
    - match: '(?<!\\)}'
      scope: punctuation.section.braces.end.inline_node_1.urtext
      pop: true
   
  inline-node-2: 
    - meta_scope: inline_node_2 
    - include: syntax-main
    - match: '(?<!\\)}'
      scope: punctuation.section.braces.end.inline_node_2.urtext
      pop: true
    - match: '(?<!\\){'
      scope: punctuation.section.braces.begin.inline_node_3.urtext
      push: inline-node-3

  inline-node-3: 
    - meta_scope: inline_node_3
    - include: syntax-main
    - match: '(?<!\\)}'
      scope: punctuation.section.braces.end.inline_node_3.urtext
      pop: true
    - match: '(?<!\\){'
      scope: punctuation.section.braces.begin.inline_node_4.urtext
      push: inline-node-4

  inline-node-4: 
    - meta_scope: inline_node_4
    - include: syntax-main
    - match: '(?<!\\){'
      scope: punctuation.section.braces.begin.inline_node_5.urtext
      push: inline-node-5
    - match: '(?<!\\)}'
      scope: punctuation.section.braces.end.inline_node_4.urtext
      pop: true

  inline-node-5: 
    - meta_scope: inline_node_5
    - include: syntax-main
    - match: '(?<!\\){'
      scope: punctuation.section.braces.begin.inline_node_5.urtext
      push: inline-node-1
    - match: '(?<!\\)}'
      scope: punctuation.section.braces.end.inline_node_5.urtext
      pop: true

  node_link:
    - match: '(\|)(\?\s)?(\!\s)?([^>]+)>'
      captures:
        1: link_opening_wrapper.urtext 
        2: missing_node.urtext
        3: action_node.urtext
        4: link_id.urtext

  node_pointer:
    - match: '(\|[\?]?\s)([^>]+)>>{1,2}'
      captures:
        1: pointer_prefix.urtext
        2: pointer_id.urtext

  file_link:
    - match: '(\|f>\s)[^\s][^;]*\s>'
      scope: file_link.urtext

  raw:
    - meta_scope: raw.urtext
    - match: '`'
      pop: true

  node_title:
    - match: '(?!<=\{)((([^\|>\{\}\n\r_])|(?<!\s)_)+)(\s_)(\s|$)'
      captures:
        1: node_title.urtext
        4: title_marker.urtext
    - match: '`'
      push: raw 

  url:
    - match: '(http(s)?://)[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)'
      scope: url_link.urtext

  meta-key-terminator:
    - match: ';'
      meta_scope: punctuation.terminator.urtext

  tagvalue-separator:
    - match: '\s-\s'
      scope: entity.name.value_separator.urtext

  other-project-link:
    - match: '=>\"(.*?)\"'
      scope: link.other-project.urtext
  
  bold-text:
    - match: '(\*\*)(.*)(\*\*)'
      captures:
        2: bold.urtext

  compact-node:
    - meta_scope: compact_node.urtext
    - include: node_pointer
    - include: node_link
    - include: other-project-link
    - include: file_link
    - include: shorthand_meta
    - include: url
    - include: node_title
    - include: trigger
    - include: bold-text
    - match: '`'
      push: raw 
    
    - match: <[^!\s-]
      push: datestamp

    - match: '(?<=::){'
      push: inline-node-1

    - match: '(?<=::)[^\s\{]'
      push: metadata-value
    
    - match: '[\w_\?\!#\d]+?(?=::)'
      scope: meta_key.urtext
      push: metadata-entry
  
    - match: '(?<!\\){'
      scope: punctuation.section.braces.begin.inline_node_1.urtext
      push: inline-node-1
    - match: '[\r|\n]'
      pop: true

